name: TB Update with Log

on:
  # push:
  # schedule:
  #   - cron: '0 0 * * *'  # 每天 UTC 00:00 执行
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Update TV logos (keep local files & log)
      run: |
        mkdir -p tb-fanmingming
        temp_dir=$(mktemp -d)
        log_file="tb-fanmingming/update_log.txt"

        echo "TB Update Log - $(date -u '+%Y-%m-%d %H:%M:%S UTC')" > "$log_file"
        echo "===============================" >> "$log_file"

        # 克隆远程仓库
        git clone --depth 1 https://github.com/fanmingming/live.git "$temp_dir"

        # 遍历远程 tv 目录一级 png 文件
        find "$temp_dir/tv" -maxdepth 1 -type f -name '*.png' | while read remote_file; do
          filename=$(basename "$remote_file")
          target_file="tb-fanmingming/$filename"

          if [ ! -f "$target_file" ]; then
            cp "$remote_file" "$target_file"
            echo "Added remote: $filename" >> "$log_file"
          elif [ "$remote_file" -nt "$target_file" ]; then
            cp "$remote_file" "$target_file"
            echo "Updated remote: $filename" >> "$log_file"
          else
            echo "Kept local: $filename" >> "$log_file"
          fi
        done

        # 删除临时目录
        rm -rf "$temp_dir"

        # 配置 Git
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"

        # 仅当 tb 有变动时提交
        if git status --porcelain | grep -q '^??\|^ M'; then
          git add tb-fangmingming
          git commit -m "Update TV logos with log: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          git push origin main
        else
          echo "No changes in tb directory."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
